name: Package Application with Pyinstaller

on:
  push:
    branches: [ master ]
    tags: 
     - 'v*'

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages for ${{ matrix.TARGET_FORMATTED }}
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            TARGET_FORMATTED: MacOS
            CMD_BUILD: |
                pyinstaller --windowed -F -n stemplayer-explorer -D main.py
                zip stemplayer-explorer-macos.zip -r dist/stemplayer-explorer/*
            OUT_FILE_NAME: stemplayer-explorer-macos.zip
          - os: windows-latest
            TARGET: windows
            TARGET_FORMATTED: Windows
            CMD_BUILD: |
                pyinstaller -F -n stemplayer-explorer -D main.py
                tar.exe -a -c -f stemplayer-explorer-windows.zip dist\stemplayer-explorer\*
            OUT_FILE_NAME: stemplayer-explorer-windows.zip
          - os: ubuntu-latest
            TARGET: linux
            TARGET_FORMATTED: Linux
            CMD_BUILD: |
              sudo apt-get install python3 python3-dev xcb python3-pyqt5 pyqt5-dev pyqt5-dev-tools -y
              pyinstaller -F -n stemplayer-explorer -D main.py
              zip stemplayer-explorer-linux.zip -r dist/stemplayer-explorer/*
            OUT_FILE_NAME: stemplayer-explorer-linux.zip

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10.2
      uses: actions/setup-python@v2
      with:
        python-version: 3.10.2
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt
    - name: Build with pyinstaller for ${{ matrix.TARGET }}
      run: |
        cd src
        ${{ matrix.CMD_BUILD }} 
        chmod +x dist/stemplayer-explorer/${{ matrix.OUT_FILE_NAME }}
    - uses: actions/upload-artifact@v2
      with:
        name: stemplayer-explorer-${{ matrix.TARGET }}
        path: src/dist/${{ matrix.OUT_FILE_NAME }}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: src/${{ matrix.OUT_FILE_NAME }}
        asset_name: ${{ matrix.OUT_FILE_NAME }}
        asset_content_type: application/zip
